/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Spaceship_2(props) {
  const { nodes, materials } = useGLTF('./src/assets/radical_spaceship_2.glb')

  const spaceship_2 = useRef()

  useFrame((state, delta) => {
    if (spaceship_2.current.position.z > 0) {
      spaceship_2.current.position.z -= 0.04
    } else {
      spaceship_2.current.position.z = 75
    }
  })
  return (
    <group ref={spaceship_2} {...props} dispose={null} position={[0, 0, props.posZ]} scale={0.02} >
      <mesh geometry={nodes.body.geometry} material={materials.body} rotation={[0, -1.57, -Math.PI]} scale={[-4.59, -1, -1]} />
      <mesh geometry={nodes.thrust.geometry} material={materials.thrust} rotation={[0, -1.57, -Math.PI]} scale={[-4.59, -1, -1]} />
      <mesh geometry={nodes.windows.geometry} material={materials.windows} rotation={[0, -1.57, -Math.PI]} scale={[-4.59, -1, -1]} />
    </group>
  )
}

useGLTF.preload('./src/assets/radical_spaceship_2.glb')
